# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: jaeger
  jaeger-infra: template
  template: jaeger-template
metadata:
  annotations:
    description: Jaeger Distributed Tracing Server
    iconClass: icon-go-gopher
    openshift.io/display-name: Jaeger (production)
    tags: instant-app,tracing,opentracing,jaeger
  creationTimestamp: 2019-12-05T20:03:17Z
  labels:
    app: jaeger
    jaeger-infra: template-production
    name: jaeger-infra
  name: jaeger-template
  namespace: jaeger
  resourceVersion: "84086779"
  selfLink: /apis/template.openshift.io/v1/namespaces/jaeger/templates/jaeger-template
  uid: 476258e9-179a-11ea-8ab6-0050569e9d8f
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-deployment
    name: ${JAEGER_SERVICE_NAME}-collector
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "14268"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: collector-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/collector.yaml
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-collector:${IMAGE_VERSION}
          name: ${JAEGER_SERVICE_NAME}-collector
          ports:
          - containerPort: 14250
            protocol: TCP
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        volumes:
        - configMap:
            items:
            - key: collector
              path: collector.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-service
    name: ${JAEGER_SERVICE_NAME}-collector
  spec:
    ports:
    - name: jaeger-collector-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: zipkin-service
    name: ${JAEGER_ZIPKIN_SERVICE_NAME}
  spec:
    ports:
    - name: jaeger-zipkin-http
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-deployment
    name: ${JAEGER_SERVICE_NAME}-query
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "16686"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: query-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/query.yaml
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-query:${IMAGE_VERSION}
          name: jaeger-query
          ports:
          - containerPort: 16686
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 16687
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        - args:
          - --reporter.tchannel.host-port=jaeger-collector:14267
          image: jaegertracing/jaeger-agent:${IMAGE_VERSION}
          name: jaeger-agent
          ports:
          - containerPort: 6831
            protocol: UDP
        volumes:
        - configMap:
            items:
            - key: query
              path: query.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-service
    name: ${JAEGER_SERVICE_NAME}-query
  spec:
    ports:
    - name: jaeger-query
      port: 80
      protocol: TCP
      targetPort: 16686
    selector:
      jaeger-infra: query-pod
    type: LoadBalancer
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-route
    name: ${JAEGER_SERVICE_NAME}-query
  spec:
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: ${JAEGER_SERVICE_NAME}-query
parameters:
- description: The name of the Jaeger Service.
  displayName: Jaeger Service Name
  name: JAEGER_SERVICE_NAME
  required: true
  value: jaeger
- description: The Jaeger image version to use
  displayName: Image version
  name: IMAGE_VERSION
  value: "1.8"
- description: The name of the Jaeger Zipkin Service.
  displayName: Jaeger Zipkin Service Name
  name: JAEGER_ZIPKIN_SERVICE_NAME
  required: true
  value: zipkin
